<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<title>INTUIT.ru::Интернет-Университет Информационных Технологий</title>
<link href="15. Основные понятия информационной безопасности_files/printabl.css" type="text/css" rel="stylesheet">
</head>
<body leftmargin="6" topmargin="6" marginheight="6" marginwidth="6">


<div align="left">
<span style="color: #000000; font-weight: bold;">
&nbsp;&nbsp;
<span style="font-size:12pt;">Интернет-Университет Информационных Технологий</span>
</span>
</div>

&nbsp;&nbsp;
<span align="rright" style="color: #330066; text-decoration:underline;">http://www.INTUIT.ru</span>


<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr><td height="8" colspan=3><img src="15. Основные понятия информационной безопасности_files/empty000.gif" width="1" height="8"></td></tr>
<tr><td class="orang" height="1" colspan=3><img src="15. Основные понятия информационной безопасности_files/empty000.gif" width="1" height="1"></td></tr>
<tr><td height="8" colspan=3><img src="15. Основные понятия информационной безопасности_files/empty000.gif" width="1" height="8"></td></tr>
<tr valign="top">
<td><img src="15. Основные понятия информационной безопасности_files/empty000.gif" width="8" height="1"></td>
<td>
	<!-- content -->
	<table border="0" cellpadding="0" cellspacing="0" width="100%">
	<tr><td class="head">Основы операционных систем</td></tr>
<tr><td height="4"><img src="15. Основные понятия информационной безопасности_files/empty000.gif" width="1" height="4"></td></tr>
	<tr><td class="orang" height="1"><img src="15. Основные понятия информационной безопасности_files/empty000.gif" width="1" height="1"></td></tr>
	<tr><td height="8"><img src="15. Основные понятия информационной безопасности_files/empty000.gif" width="1" height="8"></td></tr>
	<tr><td><span class="headsub">


15. Лекция:

 Основные понятия информационной безопасности: версия для печати и PDA</span>

<br>
<span class="rtxt">Рассмотрены подходы к обеспечению безопасности информационных систем.
Ключевые понятия информационной безопасности: конфиденциальность,
целостность и доступность информации, а любое действие, направленное
на их нарушение, называется угрозой. Основные понятия информационной
безопасности регламентированы в основополагающих документах.
Существует несколько базовых технологий безопасности, среди которых
можно выделить криптографию.
</span>

</td></tr>

	<tr><td height="8"><img src="15. Основные понятия информационной безопасности_files/empty000.gif" width="1" height="8"></td></tr>
	<tr><td class="orang" height="1"><img src="15. Основные понятия информационной безопасности_files/empty000.gif" width="1" height="1"></td></tr>
	<tr><td height="8"><img src="15. Основные понятия информационной безопасности_files/empty000.gif" width="1" height="8"></td></tr>
	<tr><td>


<h3 >Введение</h3><p  id="id_1">В октябре 1988 г. в США произошло событие, названное специалистами
крупнейшим нарушением <span class="keyword">безопасности</span> американских компьютерных систем
из когда-либо случавшихся. 23-летний студент выпускного курса
Корнельского университета Роберт Т. Моррис запустил в компьютерной
сети ARPANET программу, представлявшую собой редко встречающуюся
разновидность компьютерных вирусов – сетевых "червей". В результате
<span class="keyword">атаки</span> был полностью или частично заблокирован ряд общенациональных
компьютерных сетей, в частности Internet, CSnet, NSFnet, BITnet,
ARPANET и несекретная военная сеть Milnet. В итоге вирус поразил
более 6200 компьютерных систем по всей Америке, включая системы
многих крупнейших университетов, институтов, правительственных
лабораторий, частных фирм, военных баз, клиник, агентства NASA. Общий
ущерб от этой <span class="keyword">атаки</span> оценивается специалистами минимум в 100 млн.
долл. Р. Моррис был исключен из университета с правом повторного
поступления через год и приговорен судом к штрафу в 270 тыс. долл. и
трем месяцам тюремного заключения.</p><div  class="lecture_mark" id="mark_1"></div><p  id="id_2">Важность решения проблемы <span class="keyword">информационной безопасности</span> в настоящее
время общепризнана, подтверждением чему служат громкие процессы о
нарушении <span class="keyword">целостности</span> систем. Убытки ведущих компаний в связи с
нарушениями <span class="keyword">безопасности информации</span> составляют триллионы долларов,
причем только треть опрошенных компаний смогли определить
количественно размер потерь. Проблема обеспечения <span class="keyword">безопасности</span> носит
комплексный характер, для ее решения необходимо сочетание
законодательных, организационных и программно-технических мер.</p><div  class="lecture_mark" id="mark_2"></div><p  id="id_3">Таким образом, обеспечение <span class="keyword">информационной безопасности</span> требует
системного подхода и нужно использовать разные средства и приемы –
морально-этические, законодательные, административные и технические.
Нас будут интересовать последние. Технические средства реализуются
программным и аппаратным обеспечением и решают разные задачи по
защите, они могут быть встроены в операционные системы либо могут
быть реализованы в виде отдельных продуктов. Во многих случаях центр
тяжести смещается в сторону защищенности операционных систем.</p><div  class="lecture_mark" id="mark_3"></div><p  id="id_4">Есть несколько причин для реализации дополнительных средств защиты.
Hаиболее очевидная – помешать внешним попыткам нарушить доступ к
конфиденциальной информации. Не менее важно, однако, гарантировать,
что каждый программный компонент в системе использует системные
ресурсы только способом, совместимым с установленной политикой
применения этих ресурсов. Такие требования абсолютно необходимы для
надежной системы. Кроме того, наличие защитных механизмов может
увеличить надежность системы в целом за счет обнаружения скрытых
ошибок интерфейса между компонентами системы. Раннее обнаружение
ошибок может предотвратить "заражение" неисправной подсистемой
остальных.</p><div  class="lecture_mark" id="mark_4"></div><p  id="id_5">Политика в отношении ресурсов может меняться в зависимости от
приложения и с течением времени. Операционная система должна
обеспечивать прикладные программы инструментами для создания и
поддержки защищенных ресурсов. Здесь реализуется важный для гибкости
системы принцип – отделение политики от механизмов. Механизмы
определяют, как может быть сделано что-либо, тогда как политика
решает, что должно быть сделано. Политика может меняться в
зависимости от места и времени. Желательно, чтобы были реализованы по
возможности общие механизмы, тогда как изменение политики требует
лишь модификации системных параметров или таблиц.</p><div  class="lecture_mark" id="mark_5"></div><p  id="id_6">К сожалению, построение защищенной системы предполагает необходимость
склонить пользователя к отказу от некоторых интересных возможностей.
Например, письмо, содержащее в качестве приложения документ в формате
Word, может включать макросы. Открытие такого письма влечет за собой
запуск чужой программы, что потенциально опасно. То же самое можно
сказать про Web-страницы, содержащие апплеты. Вместо критического
отношения к использованию такой функциональности пользователи
современных компьютеров предпочитают периодически запускать
антивирусные программы и читать успокаивающие статьи о безопасности
Java.</p><div  class="lecture_mark" id="mark_6"></div><h3 >Угрозы безопасности</h3><p  id="id_7">Знание возможных <span class="keyword">угроз</span>, а также уязвимых мест защиты, которые эти
<span class="keyword">угрозы</span> обычно эксплуатируют, необходимо для того, чтобы выбирать
наиболее экономичные средства обеспечения <span class="keyword">безопасности</span>.</p><div  class="lecture_mark" id="mark_7"></div><p  id="id_8">Считается, что безопасная система должна обладать свойствами
<span class="keyword">конфиденциальности</span>, <span class="keyword">доступности</span> и <span class="keyword">целостности</span>. <a name="keyword-context.1"></a>Любое потенциальное
действие, которое направлено на нарушение <span class="keyword">конфиденциальности</span>,
<span class="keyword">целостности</span> и <span class="keyword">доступности</span> информации, называется <span class="keyword_def">угрозой</span>.
<a name="keyword-context.2"></a>Реализованная <span class="keyword">угроза</span> называется <span class="keyword_def">атакой</span>. </p><div  class="lecture_mark" id="mark_8"></div><p  id="id_9"><a name="keyword-context.3"></a>Конфиденциальная (<b>confidentiality</b>) система обеспечивает уверенность в
том, что секретные данные будут доступны только тем пользователям,
которым этот доступ разрешен (такие пользователи называются
авторизованными).<span class="keyword"></span> <a name="keyword-context.4"></a>Под <span class="keyword_def">доступностью</span> (<b>availability</b>) понимают гарантию
того, что авторизованным пользователям всегда будет доступна
информация, которая им необходима. И наконец, <a name="keyword-context.5"></a><span class="keyword_def">целостность</span> (<b>integrity</b>)
системы подразумевает, что неавторизованные пользователи не могут
каким-либо образом модифицировать данные.</p><div  class="lecture_mark" id="mark_9"></div><p  id="id_10">Защита информации ориентирована на борьбу с так называемыми
умышленными <span class="keyword">угрозами</span>, то есть с теми, которые, в отличие от случайных
<span class="keyword">угроз</span> (ошибок пользователя, сбоев оборудования и др.), преследуют
цель нанести ущерб пользователям ОС.</p><div  class="lecture_mark" id="mark_10"></div><p  id="id_11">Умышленные <span class="keyword">угрозы</span> подразделяются на активные и пассивные. <b>Пассивная</b>
<span class="keyword">угроза</span> – несанкционированный доступ к информации без изменения
состояния системы, <b>активная</b> – несанкционированное изменение системы.
Пассивные <span class="keyword">атаки</span> труднее выявить, так как они не влекут за собой
никаких изменений данных. Защита против пассивных <span class="keyword">атак</span> базируется на
средствах их предотвращения.</p><div  class="lecture_mark" id="mark_11"></div><p  id="id_12">Можно выделить несколько типов <span class="keyword">угроз</span>. Наиболее распространенная
<span class="keyword">угроза</span> – <b>попытка проникновения в систему под видом легального
пользователя</b>, например попытки угадывания и подбора паролей. Более
сложный вариант – внедрение в систему программы, которая выводит на
экран слово login. Многие легальные пользователи при этом начинают
пытаться входить в систему, и их попытки могут протоколироваться.
Такие безобидные с виду программы, выполняющие нежелательные функции,
называются "троянскими конями". Иногда удается торпедировать работу
программы проверки пароля путем многократного нажатия клавиш del,
break, cancel и т. д. Для защиты от подобных <span class="keyword">атак</span> ОС запускает
процесс, называемый <b>аутентификацией</b> пользователя (см. лекцию 16,
раздел "Идентификация и аутентификация").</p><div  class="lecture_mark" id="mark_12"></div><p  id="id_13"><span class="keyword">Угрозы</span> другого рода связаны с <b>нежелательными действиями легальных
пользователей</b>, которые могут, например, предпринимать попытки чтения
страниц памяти, дисков и лент, которые сохранили информацию,
связанную с предыдущим использованием. Защита в таких случаях
базируется на надежной системе <b>авторизации</b> (см. лекцию 16, раздел
"Авторизация. Разграничение доступа к объектам ОС"). В эту категорию
также попадают <span class="keyword">атаки</span> типа отказ в обслуживании, когда сервер затоплен
мощным потоком запросов и становится фактически недоступным для
отдельных авторизованных пользователей.</p><div  class="lecture_mark" id="mark_13"></div><p  id="id_14">Наконец, функционирование системы может быть нарушено с помощью
<b>программ-вирусов</b> или <b>программ-"червей"</b>, которые специально
предназначены для того, чтобы причинить вред или недолжным образом
использовать ресурсы компьютера. Общее название <span class="keyword">угроз</span> такого рода –
вредоносные программы (malicious software). Обычно они
распространяются сами по себе, переходя на другие компьютеры через
зараженные файлы, дискеты или по электронной почте. Наиболее
эффективный способ борьбы с подобными программами – соблюдение правил
"компьютерной гигиены". Многопользовательские компьютеры меньше
страдают от вирусов по сравнению с персональными, поскольку там
имеются системные средства защиты.</p><div  class="lecture_mark" id="mark_14"></div><p  id="id_15">Таковы основные <span class="keyword">угрозы</span>, на долю которых приходится львиная доля
ущерба, наносимого информационным системам.</p><div  class="lecture_mark" id="mark_15"></div><p  id="id_16">В ряде монографий [<a target="_blank" href="http://www.intuit.ru/department/os/osintro/popup.lit.html#27">Столлингс, 2001</a>; <a target="_blank" href="http://www.intuit.ru/department/os/osintro/popup.lit.html#30">Таненбаум, 2002</a>] также
рассматривается модель злоумышленника, поскольку очевидно, что
необходимые для организации защиты усилия зависят от предполагаемого
противника. Обеспечение <span class="keyword">безопасности</span> имеет и правовые аспекты, но это
уже выходит за рамки данного курса.</p><div  class="lecture_mark" id="mark_16"></div><h3 >Формализация подхода к обеспечению информационной безопасности</h3><p  id="id_17">Проблема <span class="keyword">информационной безопасности</span> оказалась настолько важной, что
в ряде стран были выпущены основополагающие документы, в которых
регламентированы основные подходы к проблеме <span class="keyword">информационной
безопасности</span>. В результате оказалось возможным ранжировать
информационные системы по степени надежности.</p><div  class="lecture_mark" id="mark_17"></div><p  id="id_18">Наиболее известна <span class="keyword">оранжевая (по цвету обложки) книга</span> Министерства
обороны США [<a target="_blank" href="http://www.intuit.ru/department/os/osintro/popup.lit.html#3">DoD, 1993</a>]. В этом документе определяется четыре уровня
<span class="keyword">безопасности</span> – D, C, B и A. По мере перехода от уровня D до A к
надежности систем предъявляются все более жесткие требования. Уровни
C и B подразделяются на <span class="keyword">классы</span> (C1, <span class="keyword">C2</span>, В1, В2, ВЗ). Чтобы система в
результате процедуры сертификации могла быть отнесена к некоторому
<span class="keyword">классу</span>, ее защита должна удовлетворять оговоренным требованиям.</p><div  class="lecture_mark" id="mark_18"></div><p  id="id_19">В качестве примера рассмотрим требования <span class="keyword">класса</span> <span class="keyword">C2</span>, которому
удовлетворяют ОС Windows NT, отдельные реализации Unix и ряд других.</p><div  class="lecture_mark" id="mark_19"></div><ul  id="id_20"><li>Каждый пользователь должен быть идентифицирован уникальным входным
именем и паролем для входа в систему. Доступ к компьютеру
предоставляется лишь после аутентификации.</li><li>Система должна быть в состоянии использовать эти уникальные
идентификаторы, чтобы следить за действиями пользователя (управление
избирательным доступом). Владелец ресурса (например, файла) должен
иметь возможность контролировать доступ к этому ресурсу.</li><li>Операционная система должна защищать объекты от повторного
использования. Перед выделением новому пользователю все объекты,
включая память и файлы, должны инициализироваться.</li><li>Системный администратор должен иметь возможность вести учет всех
событий, относящихся к <span class="keyword">безопасности</span>.</li><li>Система должна защищать себя от внешнего влияния или навязывания,
такого как модификация загруженной системы или системных файлов,
хранящихся на диске.</li></ul><div  class="lecture_mark" id="mark_20"></div><p  id="id_26">Сегодня на смену <span class="keyword">оранжевой книге</span> пришел стандарт Common Criteria, а
набор критериев Controlled Access Protection Profile сменил критерии
<span class="keyword">класса</span> C2.</p><div  class="lecture_mark" id="mark_26"></div><p  id="id_27">Основополагающие документы содержат определения многих ключевых
понятий, связанных с <span class="keyword">информационной безопасностью</span>. Некоторые из них
(аутентификация, авторизация, домен безопасности и др.) будут
рассмотрены в следующей лекции. В дальнейшем мы также будем
оперировать понятиями "субъект" и "объект" безопасности. Субъект
безопасности – активная системная составляющая, к которой применяется
политика безопасности, а объект – пассивная. Примерами субъектов
могут служить пользователи и группы пользователей, а объектов –
файлы, системные таблицы, принтер и т. п.</p><div  class="lecture_mark" id="mark_27"></div><p  id="id_28">По существу, проектирование системы безопасности подразумевает ответы
на следующие вопросы: какую информацию защищать, какого рода <span class="keyword">атаки</span> на
<span class="keyword">безопасность</span> системы могут быть предприняты, какие средства
использовать для защиты каждого вида информации? Поиск ответов на
данные вопросы называется формированием политики безопасности,
которая помимо чисто технических аспектов включает также и решение
организационных проблем. На практике реализация политики безопасности
состоит в присвоении субъектам и объектам идентификаторов и фиксации
набора правил, позволяющих определить, имеет ли данный субъект
авторизацию, достаточную для предоставления к данному объекту
указанного типа доступа.</p><div  class="lecture_mark" id="mark_28"></div><p  id="id_29">Формируя политику безопасности, необходимо учитывать несколько
базовых принципов. Так, Зальтцер (Saltzer) и Шредер (Schroeder)
(1975) на основе своего опыта работы с MULTICS сформулировали
следующие рекомендации для проектирования системы безопасности ОС.</p><div  class="lecture_mark" id="mark_29"></div><ul  id="id_30"><li>Проектирование системы должно быть открытым. Нарушитель и так все
знает (криптографические алгоритмы открыты).</li><li>Не должно быть доступа по умолчанию. Ошибки с отклонением
легитимного доступа будут обнаружены скорее, чем ошибки там, где
разрешен неавторизованный доступ.</li><li>Нужно тщательно проверять текущее авторство. Так, многие системы
проверяют привилегии доступа при открытии файла и не делают этого
после. В результате пользователь может открыть файл и держать его
открытым в течение недели и иметь к нему доступ, хотя владелец уже
сменил защиту.</li><li>Давать каждому процессу минимум возможных привилегий.</li><li>Защитные механизмы должны быть просты, постоянны и встроены в
нижний слой системы, это не аддитивные добавки (известно много
неудачных попыток "улучшения" защиты слабо приспособленной для этого
ОС MS-DOS).</li><li>Важна физиологическая приемлемость. Если пользователь видит, что
защита требует слишком больших усилий, он от нее откажется. Ущерб от
<span class="keyword">атаки</span> и затраты на ее предотвращение должны быть сбалансированы.</li></ul><div  class="lecture_mark" id="mark_30"></div><p  id="id_37">Приведенные соображения показывают необходимость продумывания и
встраивания защитных механизмов на самых ранних стадиях
проектирования системы.</p><div  class="lecture_mark" id="mark_37"></div><h3 >Криптография как одна из базовых технологий безопасности ОС</h3><p  id="id_38">Многие службы <span class="keyword">информационной безопасности</span>, такие как контроль входа в
систему, разграничение доступа к ресурсам, обеспечение безопасного
хранения данных и ряд других, опираются на использование
криптографических алгоритмов. Имеется обширная литература по этому
актуальному для <span class="keyword">безопасности</span> информационных систем вопросу.</p><div  class="lecture_mark" id="mark_38"></div><p  id="id_39"><b>Шифрование</b> – процесс преобразования сообщения из открытого текста
(plaintext) в шифротекст (ciphertext) таким образом, чтобы:</p><div  class="lecture_mark" id="mark_39"></div><ul  id="id_40"><li>его могли прочитать только те стороны, для которых оно
предназначено;</li><li>проверить подлинность отправителя (аутентификация);</li><li>гарантировать, что отправитель действительно послал данное
сообщение.</li></ul><div  class="lecture_mark" id="mark_40"></div><p  id="id_44">В алгоритмах шифрования предусматривается наличие ключа. Ключ – это
некий параметр, не зависящий от открытого текста. Результат
применения алгоритма шифрования зависит от используемого ключа. В
<span class="keyword">криптографии</span> принято правило Кирхгофа: "Стойкость шифра должна
определяться только секретностью ключа". Правило Кирхгофа
подразумевает, что алгоритмы шифрования должны быть открыты.</p><div  class="lecture_mark" id="mark_44"></div><p  id="id_45">В методе шифрования с <b>секретным</b> или <span class="keyword">симметричным ключом</span> имеется один
ключ, который используется как для шифрования, так и для расшифровки
сообщения. Такой ключ нужно хранить в секрете. Это затрудняет
использование системы шифрования, поскольку ключи должны регулярно
меняться, для чего требуется их секретное распространение. Наиболее
популярные алгоритмы шифрования с секретным ключом: DES, TripleDES,
ГОСТ и ряд других.</p><div  class="lecture_mark" id="mark_45"></div><p  id="id_46">Часто используется шифрование с помощью <span class="keyword">односторонней функции</span>,
называемой также хеш- или дайджест-функцией. Применение этой функции
к шифруемым данным позволяет сформировать небольшой дайджест из
нескольких байтов, по которому невозможно восстановить исходный
текст. Получатель сообщения может проверить <span class="keyword">целостность</span> данных,
сравнивая полученный вместе с сообщением дайджест с вычисленным вновь
при помощи той же <span class="keyword">односторонней функции</span>. Эта техника активно
используется для контроля входа в систему. Например, пароли
пользователей хранятся на диске в зашифрованном <span class="keyword">односторонней
функцией</span> виде. Наиболее популярные хеш-функции: MD4, MD5 и др.</p><div  class="lecture_mark" id="mark_46"></div><p  id="id_47">В системах шифрования с <b>открытым</b> или <b>асимметричным ключом</b> (public/
assymmetric key) используется два ключа (см. рис. 15.1). Один из
ключей, называемый открытым, несекретным, используется для шифрования
сообщений, которые могут быть расшифрованы только с помощью
секретного ключа, имеющегося у получателя, для которого предназначено
сообщение. Иногда поступают по-другому. Для шифрования сообщения
используется секретный ключ, и если сообщение можно расшифровать с
помощью открытого ключа, подлинность отправителя будет гарантирована
(система электронной подписи). Этот принцип изобретен Уитфилдом Диффи
(Whitfield Diffie) и Мартином Хеллманом (Martin Hellman) в 1976 г.</p><div  class="lecture_mark" id="mark_47"></div><p  align="left" id="id_48"><a name="image.15.1"></a><div><img src="15. Основные понятия информационной безопасности_files/15-10000.gif" alt="Шифрование открытым ключом" width="449" height="272"></div><br><b>Рис. 15.1.</b> 
        Шифрование открытым ключом</p><div  class="lecture_mark" id="mark_48"></div><p  id="id_49">Использование открытых ключей снимает проблему обмена и хранения
ключей, свойственную системам с <span class="keyword">симметричными ключами</span>. Открытые ключи
могут храниться публично, и каждый может послать зашифрованное
открытым ключом сообщение владельцу ключа. Однако расшифровать это
сообщение может только владелец открытого ключа при помощи своего
секретного ключа, и никто другой. Несмотря на очевидные удобства,
связанные с хранением и распространением ключей, асимметричные
алгоритмы гораздо менее эффективны, чем симметричные, поэтому во
многих криптографических системах используются оба метода.</p><div  class="lecture_mark" id="mark_49"></div><p  id="id_50">Среди несимметричных алгоритмов наиболее известен <span class="keyword">RSA</span>, предложенный
Роном Ривестом (Ron Rivest), Ади Шамиром (Adi Shamir) и Леонардом
Эдлманом (Leonard Adleman). Рассмотрим его более подробно.</p><div  class="lecture_mark" id="mark_50"></div><h4 >Шифрование с использованием алгоритма RSA</h4><p  id="id_51">Идея, положенная в основу метода, состоит в том, чтобы найти такую
функцию <span class="texample">y=&#934;(x)</span>, для которой получение обратной функции <span class="texample">x=f<sup>-1</sup>(y)</span> было
бы в общем случае очень сложной задачей (NP-полной задачей).
Например, получить произведение двух чисел <span class="texample">n=p&#215;q</span> просто, а разложить
<span class="texample">n</span> на множители, если <span class="texample">p</span> и <span class="texample">q</span> достаточно большие простые числа, –
NP-полная задача с вычислительной сложностью <span class="texample">~ n<sup>10</sup></span>. Однако если знать
некую секретную информацию, то найти обратную функцию <span class="texample">x=f<sup>-1</sup>(y)</span>
существенно проще. Такие функции также называют <span class="keyword">односторонними
функциями</span> с лазейкой или потайным ходом.</p><div  class="lecture_mark" id="mark_51"></div><p  id="id_60">Применяемые в <span class="keyword">RSA</span> прямая и обратная функции просты. Они базируются на
применении теоремы Эйлера из теории чисел.</p><div  class="lecture_mark" id="mark_60"></div><p  id="id_61">Прежде чем сформулировать теорему Эйлера, необходимо определить
важную функцию <span class="texample">&#934;(n)</span> из теории чисел, называемую функцией Эйлера. Это
число взаимно простых (взаимно простыми называются целые числа, не
имеющие общих делителей) с <span class="texample">n</span> целых чисел, меньших <span class="texample">n</span>. Например,
<span class="texample">&#934;(7)=6</span>. Очевидно, что, если <span class="texample">p</span> и <span class="texample">q</span> – простые числа и <span class="texample">p<img src="15. Основные понятия информационной безопасности_files/ne000000.gif" width="8" height="18" border="0" alt="" style="position: relative; top: 2px">q</span>, то <span class="texample">&#934;(p)=p-1</span>,
и <span class="texample">&#934;(pq)=(p-1)&#215;(q-1)</span>.</p><div  class="lecture_mark" id="mark_61"></div><h4 >Теорема Эйлера</h4><p  id="id_71">Теорема Эйлера утверждает, что для любых взаимно простых чисел <span class="texample">x</span> и <span class="texample">n
(x &lt; n)</span> </p><div  class="lecture_mark" id="mark_71"></div><p  id="id_74"><span class="texample">x<sup>&#934;(n)</sup>mod n = 1</span> </p><div  class="lecture_mark" id="mark_74"></div><p  id="id_76">или в более общем виде</p><div  class="lecture_mark" id="mark_76"></div><p  id="id_77"><span class="texample">x<sup>k&#934;(n)+1</sup>mod n = 1</span></p><div  class="lecture_mark" id="mark_77"></div><p  id="id_79">Сформулируем еще один важный результат. Для любого <span class="texample">m&gt;0</span> и <span class="texample">0&lt;e&lt;m</span>, где <span class="texample">e</span>
и <span class="texample">m</span> взаимно просты, найдется единственное <span class="texample">0&lt;d&lt;m</span>, такое, что</p><div  class="lecture_mark" id="mark_79"></div><p  id="id_85"><span class="texample">de mod m = 1</span>.</p><div  class="lecture_mark" id="mark_85"></div><p  id="id_87">Здесь <span class="texample">d</span> легко можно найти по обобщенному алгоритму Евклида (см.,
например, Д. Кнут. Искусство программирования на ЭВМ, т.2, 4.5.2).
Известно, что вычислительная сложность алгоритма Евклида <span class="texample">~ ln n</span>.</p><div  class="lecture_mark" id="mark_87"></div><p  id="id_90">Подставляя <span class="texample">&#934;(n)</span> вместо <span class="texample">m</span>, получим <span class="texample">de mod&#934;(n)=1</span> </p><div  class="lecture_mark" id="mark_90"></div><p  id="id_94">или</p><div  class="lecture_mark" id="mark_94"></div><p  id="id_95"><span class="texample">de = k&#934;(n)+1</span></p><div  class="lecture_mark" id="mark_95"></div><p  id="id_97">Тогда прямой функцией будет</p><div  class="lecture_mark" id="mark_97"></div><p  id="id_98"><span class="texample">&#934;(x) = x<sup>e</sup> mod n</span></p><div  class="lecture_mark" id="mark_98"></div><p  id="id_100">где <span class="texample">x</span> – положительное целое, <span class="texample">x&lt;n=pq</span>, <span class="texample">p</span> и <span class="texample">q</span> – целые простые числа и,
следовательно,</p><div  class="lecture_mark" id="mark_100"></div><p  id="id_105"><span class="texample">&#934;(n)=(p-1)(q-1)</span></p><div  class="lecture_mark" id="mark_105"></div><p  id="id_107">где <span class="texample">e</span> – положительное целое и <span class="texample">e&lt;&#934;(n)</span>. Здесь <span class="texample">e</span> и <span class="texample">n</span> открыты. Однако <span class="texample">p</span> и
<span class="texample">q</span> неизвестны (чтобы их найти, нужно выполнить разбиение <span class="texample">n</span> на
множители), следовательно, неизвестна и <span class="texample">&#934;(n)</span>, а именно они и
составляют потайной ход.</p><div  class="lecture_mark" id="mark_107"></div><p  id="id_116">Вычислим обратную функцию</p><div  class="lecture_mark" id="mark_116"></div><p  id="id_117"><span class="texample">&#934;<sup>-1</sup>(y) = y<sup>d</sup> mod n = x<sup>ed</sup> mod n = x<sup>k&#934;(n)+1</sup> mod n = x</span> </p><div  class="lecture_mark" id="mark_117"></div><p  id="id_119">Последнее преобразование справедливо, поскольку <span class="texample">x&lt;n</span> и <span class="texample">x</span> и <span class="texample">n</span> взаимно
просты.</p><div  class="lecture_mark" id="mark_119"></div><p  id="id_123">При практическом использовании алгоритма <span class="keyword">RSA</span> вначале необходимо
выполнить генерацию ключей. Для этого нужно:</p><div  class="lecture_mark" id="mark_123"></div><ol  id="id_124"><li>Выбрать два очень больших простых числа <span class="texample">p</span> и <span class="texample">q</span>;</li><li>Вычислить произведение <span class="texample">n=p&#215;q</span>;</li><li>Выбрать большое случайное число d, не имеющее общих сомножителей с
числом <span class="texample">(p-1)&#215;(q-1)</span>;</li><li>Определить число <span class="texample">e</span>, чтобы выполнялось

			<p id="id_134"><span class="texample">(e&#215;d)mod((p-1)&#215;(q-1))=1</span>.</p><div class="lecture_mark" id="mark_134"></div></li></ol><div  class="lecture_mark" id="mark_124"></div><p  id="id_136">Тогда открытым ключом будут числа <span class="texample">e</span> и <span class="texample">n</span>, а секретным ключом – числа <span class="texample">d</span>
и <span class="texample">n</span>.</p><div  class="lecture_mark" id="mark_136"></div><p  id="id_141">Теперь, чтобы зашифровать данные по известному ключу <span class="texample">{e,n}</span>,
необходимо сделать следующее.</p><div  class="lecture_mark" id="mark_141"></div><ul  id="id_143"><li>Разбить шифруемый текст на блоки, где i-й блок представить в виде
числа <span class="texample">M</span>, величина которого меньше, чем <span class="texample">n</span>. Это можно сделать
различными способами, например используя вместо букв их номера в
алфавите.</li><li>Зашифровать текст, рассматриваемый как последовательность чисел
<span class="texample">m(i), по формуле c(i)=(m(i)<sup>e</sup>)mod n.</span> </li></ul><div  class="lecture_mark" id="mark_143"></div><p  id="id_149">Чтобы расшифровать эти данные, используя секретный ключ <span class="texample">{d,n}</span>,
необходимо вычислить: <span class="texample">m(i) = (c(i)<sup>d</sup>) mod n</span>. В результате будет
получено множество чисел <span class="texample">m(i)</span>, которые представляют собой часть
исходного текста.</p><div  class="lecture_mark" id="mark_149"></div><p  id="id_153">Например, зашифруем и расшифруем сообщение <span class="texample">"AБВ"</span>, которое представим
как число <span class="texample">123</span>.</p><div  class="lecture_mark" id="mark_153"></div><p  id="id_156">Выбираем <span class="texample">p=5</span> и <span class="texample">q=11</span> (числа на самом деле должны быть большими).</p><div  class="lecture_mark" id="mark_156"></div><p  id="id_159">Находим <span class="texample">n=5&#215;11=55</span>.</p><div  class="lecture_mark" id="mark_159"></div><p  id="id_161">Определяем <span class="texample">(p-1)&#215;(q-1)=40</span>. Тогда <span class="texample">d</span> будет равно, например, <span class="texample">7</span>.</p><div  class="lecture_mark" id="mark_161"></div><p  id="id_165">Выберем <span class="texample">e</span>, исходя из <span class="texample">(e&#215;7) mod 40=1</span>. Например, <span class="texample">e=3</span>.</p><div  class="lecture_mark" id="mark_165"></div><p  id="id_169">Теперь зашифруем сообщение, используя открытый ключ <span class="texample">{3,55}</span></p><div  class="lecture_mark" id="mark_169"></div><div  class="example"><pre>
C1 = (1<sup>3</sup>) mod 55 = 1
C2 = (2<sup>3</sup>) mod 55 = 8
C3 = (3<sup>3</sup>) mod 55 = 27
</pre></div><p  id="id_172">Теперь расшифруем эти данные, используя закрытый ключ <span class="texample">{7,55}</span>.</p><div  class="lecture_mark" id="mark_172"></div><div  class="example"><pre>
M1 = (1<sup>7</sup>) mod 55 = 1
M2 = (8<sup>7</sup>) mod 55 = 2097152 mod 55 = 2
M3 = (27<sup>7</sup>) mod 55 = 10460353203 mod 55 = 3
</pre></div><p  id="id_175">Таким образом, все данные расшифрованы.</p><div  class="lecture_mark" id="mark_175"></div><h3 >Заключение</h3><p  id="id_176"><span class="keyword">Информационная безопасность</span> относится к числу дисциплин,
развивающихся чрезвычайно быстрыми темпами. Только комплексный,
систематический, современный подход способен успешно противостоять
нарастающим <span class="keyword">угрозам</span>.</p><div  class="lecture_mark" id="mark_176"></div><p  id="id_177">Ключевые понятия <span class="keyword">информационной безопасности</span>: <span class="keyword">конфиденциальность</span>,
<span class="keyword">целостность</span> и <span class="keyword">доступность</span> информации, а любое действие, направленное
на их нарушение, называется <span class="keyword">угрозой</span>.</p><div  class="lecture_mark" id="mark_177"></div><p  id="id_178">Основные понятия <span class="keyword">информационной безопасности</span> регламентированы в
основополагающих документах.</p><div  class="lecture_mark" id="mark_178"></div><p  id="id_179">Существует несколько базовых технологий <span class="keyword">безопасности</span>, среди которых
можно выделить <span class="keyword">криптографию</span>.</p><div  class="lecture_mark" id="mark_179"></div>


	</td>
	</tr>
	<tr><td height="8"><img src="15. Основные понятия информационной безопасности_files/empty000.gif" width="1" height="8"></td></tr>
	</table>
	<!-- /content -->

</td>
<td><img src="15. Основные понятия информационной безопасности_files/empty000.gif" width="8" height="1"></td>
</tr>
</table>
<!-- /bottom -->
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr><td class="orang" height="1"><img src="15. Основные понятия информационной безопасности_files/empty000.gif" width="1" height="1"></td></tr>
<td class="ltxt" align=center>&copy; INTUIT.ru, 2003-2008. Все права защищены.</td>
</tr>
</table>
<!-- /bottom -->

<script src="15. Основные понятия информационной безопасности_files/urchin00.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-3475067-1";
urchinTracker();
</script></body>
</html>


<!-- This document saved from http://www.intuit.ru/department/os/osintro/15/osintro_15.html -->
